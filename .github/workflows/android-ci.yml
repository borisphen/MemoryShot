name: Android CI/CD (Debug Build)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions: # –î–æ–±–∞–≤–ª—è–µ–º —è–≤–Ω—ã–µ –ø—Ä–∞–≤–∞
      contents: write  # –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞
    environment: Environment
    env:
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Create local.properties
        run: echo "sdk.dir=$ANDROID_HOME" > local.properties

      - name: Validate API Key
        run: |
          if [ -z "$GROQ_API_KEY" ]; then
            echo "::error::GROQ_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
            exit 1
          fi
          echo "‚úÖ API Key –ø–æ–ª—É—á–µ–Ω (–¥–ª–∏–Ω–∞: ${#GROQ_API_KEY} —Å–∏–º–≤–æ–ª–æ–≤)"

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      - name: Build Debug APK
        run: ./gradlew assembleDebug -DGROQ_API_KEY="$GROQ_API_KEY"

      - name: Verify BuildConfig
        run: |
          FILE="app/build/generated/source/buildConfig/debug/com/borisphen/interviewassistant/BuildConfig.java"
          if grep -q 'public static final String GROQ_API_KEY = "' "$FILE"; then
            echo "‚úÖ BuildConfig —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
          else
            echo "::error::–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å BuildConfig!"
            exit 1
          fi

      - name: Create Release
        id: create-release
        if: github.ref == 'refs/heads/master'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: debug-v${{ github.run_number }}
          release_name: Debug v${{ github.run_number }}
          body: |
            Debug build for commit: ${{ github.sha }}
            –°–æ–±—Ä–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ GitHub Actions.
          draft: false
          prerelease: false

      - name: Upload APK
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/debug/app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Notify Telegram
        if: github.ref == 'refs/heads/master'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üöÄ –ù–æ–≤–∞—è debug-—Å–±–æ—Ä–∫–∞ Android-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!
            ‚Ä¢ –í–µ—Ä—Å–∏—è: debug-v${{ github.run_number }}
            ‚Ä¢ –°—Å—ã–ª–∫–∞: https://github.com/${{ github.repository }}/releases/tag/debug-v${{ github.run_number }}
            ‚Ä¢ –ö–æ–º–º–∏—Ç: ${{ github.sha }}
            